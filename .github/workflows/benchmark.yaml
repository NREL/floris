name: Floris Benchmark
on:
  schedule:
    - cron: '0 3 * * *'  # Runs daily at 3am UTC
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run FLORIS benchmarks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]  # Or whichever versions you support
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[develop]"
      - name: Run benchmark
        run: |
          cd benchmarks
          pytest bench.py --benchmark-json output.json

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark with pytest-benchmark
          tool: 'pytest'
          output-file-path: benchmarks/output.json
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t/github-action-not-triggering-gh-pages-upon-push/16096
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@ktrz'

      - name: Store benchmark result - separate results repo
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Python Benchmark with pytest-benchmark
          tool: 'pytest'
          output-file-path: benchmarks/output.json
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t/github-action-not-triggering-gh-pages-upon-push/16096
          github-token: ${{ secrets.BENCHMARK_ACTION_BOT_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          # alert-threshold: '200%'
          # comment-on-alert: true
          # fail-on-alert: true
          # alert-comment-cc-users: '@ktrz'
          # gh-repository: 'github.com/benchmark-action/github-action-benchmark-results'
