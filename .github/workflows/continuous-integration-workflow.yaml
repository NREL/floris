name: Automated tests & code coverage

on: [push, pull_request]

jobs:

  code-qa-validation:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest] #, macos-latest, windows-latest]
      fail-fast: False

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install project
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    # - name: Lint with flake8
    #   run: |
    #     pip install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run tests
      run: |
        # pytest tests/
        # -rA displays the captured output for all tests after they're run
        # See the docs: https://doc.pytest.org/en/latest/reference/reference.html#command-line-flags
        pytest -rA tests/ --ignore tests/timing.py --ignore tests/profiling.py
    - name: Generate coverage report
      # Run these tests on unit tests only so that we avoid inflating our code
      # coverage through the regression tests
      if: matrix.os == 'ubuntu-latest'
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml tests/ --ignore tests/reg_tests --ignore tests/timing.py --ignore tests/profiling.py
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
